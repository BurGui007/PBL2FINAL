// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/17/2023 03:33:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          reguniversal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module reguniversal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg b0;
reg b1;
reg clk;
reg d0;
reg d1;
reg d2;
reg d3;
reg d4;
reg d5;
reg d6;
reg d7;
reg d8;
reg d9;
reg d10;
reg d11;
reg d12;
reg d13;
reg d14;
reg d15;
// wires                                               
wire q9;
wire q10;
wire q11;
wire q12;
wire q13;
wire q14;
wire q15;

// assign statements (if any)                          
reguniversal i1 (
// port map - connection between master ports and signals/registers   
	.b0(b0),
	.b1(b1),
	.clk(clk),
	.d0(d0),
	.d1(d1),
	.d2(d2),
	.d3(d3),
	.d4(d4),
	.d5(d5),
	.d6(d6),
	.d7(d7),
	.d8(d8),
	.d9(d9),
	.d10(d10),
	.d11(d11),
	.d12(d12),
	.d13(d13),
	.d14(d14),
	.d15(d15),
	.q9(q9),
	.q10(q10),
	.q11(q11),
	.q12(q12),
	.q13(q13),
	.q14(q14),
	.q15(q15)
);
initial 
begin 
#1000000 $finish;
end 

// clk
initial
begin
	repeat(12)
	begin
		clk = 1'b0;
		clk = #40000 1'b1;
		# 40000;
	end
	clk = 1'b0;
end 

// b0
initial
begin
	repeat(3)
	begin
		b0 = 1'b0;
		b0 = #160000 1'b1;
		# 160000;
	end
	b0 = 1'b0;
end 

// b1
initial
begin
	repeat(6)
	begin
		b1 = 1'b0;
		b1 = #80000 1'b1;
		# 80000;
	end
	b1 = 1'b0;
end 

// d0
initial
begin
	d0 = 1'b0;
end 

// d1
initial
begin
	d1 = 1'b0;
end 

// d2
initial
begin
	d2 = 1'b0;
end 

// d3
initial
begin
	d3 = 1'b0;
end 

// d4
initial
begin
	d4 = 1'b0;
end 

// d5
initial
begin
	d5 = 1'b0;
end 

// d6
initial
begin
	d6 = 1'b0;
end 

// d7
initial
begin
	d7 = 1'b0;
end 

// d8
initial
begin
	d8 = 1'b0;
end 

// d9
initial
begin
	d9 = 1'b0;
	d9 = #640000 1'b1;
end 

// d10
initial
begin
	d10 = 1'b0;
	d10 = #320000 1'b1;
	d10 = #320000 1'b0;
	d10 = #320000 1'b1;
end 

// d11
initial
begin
	repeat(3)
	begin
		d11 = 1'b0;
		d11 = #160000 1'b1;
		# 160000;
	end
	d11 = 1'b0;
end 

// d12
initial
begin
	repeat(6)
	begin
		d12 = 1'b0;
		d12 = #80000 1'b1;
		# 80000;
	end
	d12 = 1'b0;
end 

// d13
initial
begin
	repeat(12)
	begin
		d13 = 1'b0;
		d13 = #40000 1'b1;
		# 40000;
	end
	d13 = 1'b0;
end 

// d14
always
begin
	d14 = 1'b0;
	d14 = #20000 1'b1;
	#20000;
end 

// d15
always
begin
	d15 = 1'b0;
	d15 = #10000 1'b1;
	#10000;
end 
endmodule

