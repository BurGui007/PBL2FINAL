// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/17/2023 08:03:45"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          principal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module principal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg ala1;
reg ala2;
reg clk;
// wires                                               
wire c1;
wire c2;
wire c3;
wire c4;
wire c5;
wire l1;
wire l2;
wire l3;
wire l4;
wire l5;
wire l6;
wire l7;

// assign statements (if any)                          
principal i1 (
// port map - connection between master ports and signals/registers   
	.ala1(ala1),
	.ala2(ala2),
	.c1(c1),
	.c2(c2),
	.c3(c3),
	.c4(c4),
	.c5(c5),
	.clk(clk),
	.l1(l1),
	.l2(l2),
	.l3(l3),
	.l4(l4),
	.l5(l5),
	.l6(l6),
	.l7(l7)
);
initial 
begin 
#1000000 $finish;
end 

// clk
initial
begin
	repeat(12)
	begin
		clk = 1'b0;
		clk = #40000 1'b1;
		# 40000;
	end
	clk = 1'b0;
end 
endmodule

